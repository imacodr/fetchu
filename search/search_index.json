{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to fetchu fetchu is a lightweight module created to simplify Roblox's HttpService for faster and efficient requests. Our goal is to minimize all the work you do for one request in a single line of code. Here is an example of a request with fetchu local import = require(game.ReplicatedStorage.roarn_modules.roarn_tools) local fetchu = import(\"fetchu\") -- or local fetchu = require(path/to/fetchu) local response = fetchu.get(\"https://pokeapi.co/api/v2/pokemon?limit=1\", {headers = { [\"Authorization\"] = \"my token for authorization!\" }, nocache = true}) print(response) --[[ Returns: {\"count\":1118,\"next\":\"https://pokeapi.co/api/v2/pokemon?offset=1&limit=1\",\"previous\":null,\"name\":\"bulbasaur\",\"url\":\"https://pokeapi.co/api/v2/pokemon/1/\"} --]]","title":"Introduction"},{"location":"#welcome-to-fetchu","text":"fetchu is a lightweight module created to simplify Roblox's HttpService for faster and efficient requests. Our goal is to minimize all the work you do for one request in a single line of code. Here is an example of a request with fetchu local import = require(game.ReplicatedStorage.roarn_modules.roarn_tools) local fetchu = import(\"fetchu\") -- or local fetchu = require(path/to/fetchu) local response = fetchu.get(\"https://pokeapi.co/api/v2/pokemon?limit=1\", {headers = { [\"Authorization\"] = \"my token for authorization!\" }, nocache = true}) print(response) --[[ Returns: {\"count\":1118,\"next\":\"https://pokeapi.co/api/v2/pokemon?offset=1&limit=1\",\"previous\":null,\"name\":\"bulbasaur\",\"url\":\"https://pokeapi.co/api/v2/pokemon/1/\"} --]]","title":"Welcome to fetchu"},{"location":"api/","text":"API All events for fetchu, and their properties are listed here. Events get fetchu.get(requestUrl: string, {headers: Dictionary<any>?, nocache: boolean?}) Send an HTTP GET request post fetchu.post(requestUrl: string, {content_type: Enum.HttpContentType?, headers: Dictionary<any>?, body: Dictionary<any>, compress: boolean?,}) Send an HTTP POST request json fetchu.json(input: table) Transforms Luau table input into a JSON string. tablefy fetchu.tablefy(input: JSON) Transforms JSON string into a Luau table. put fetchu.put(requestUrl: string, {headers: Dictionary<any>?,body: Dictionary<any>?,}) Send an HTTP PUT request delete fetchu.delete(requestUrl: string, {headers: Dictionary<any>?,body: Dictionary<any>?,}) Send an HTTP DELETE request customRequest fetchu.customRequest(requestUrl: string, {method: string, headers: Dictionary<any>?,body: Dictionary<any>?,}) Sends an HTTP request using a custom method such as CONNECT, PATCH, etc listed on the FetchOptions paramater.","title":"API"},{"location":"api/#api","text":"All events for fetchu, and their properties are listed here.","title":"API"},{"location":"api/#events","text":"get fetchu.get(requestUrl: string, {headers: Dictionary<any>?, nocache: boolean?}) Send an HTTP GET request post fetchu.post(requestUrl: string, {content_type: Enum.HttpContentType?, headers: Dictionary<any>?, body: Dictionary<any>, compress: boolean?,}) Send an HTTP POST request json fetchu.json(input: table) Transforms Luau table input into a JSON string. tablefy fetchu.tablefy(input: JSON) Transforms JSON string into a Luau table. put fetchu.put(requestUrl: string, {headers: Dictionary<any>?,body: Dictionary<any>?,}) Send an HTTP PUT request delete fetchu.delete(requestUrl: string, {headers: Dictionary<any>?,body: Dictionary<any>?,}) Send an HTTP DELETE request customRequest fetchu.customRequest(requestUrl: string, {method: string, headers: Dictionary<any>?,body: Dictionary<any>?,}) Sends an HTTP request using a custom method such as CONNECT, PATCH, etc listed on the FetchOptions paramater.","title":"Events"},{"location":"help/","text":"Need help? Most of us do when we don't know something. Here is some resources to get help from us: Devforum Post imacodr Discord Server","title":"Help!"},{"location":"installation/","text":"with Roarn (recommended for Rojo users) To install fetchu with Roarn you can simply do the following command: roarn install fetchu Learn more on how Roarn, a Roblox package manager helps your workspace. with Roblox If you are preferably using Roblox Studio to develop code you can also install our module through the Roblox marketplace. Roblox Module with GitHub You can also install our package from GitHub releases easily. We have ZIP files available for Rojo users although we would prefer you using Roarn for a more organized workspace.","title":"Installation"},{"location":"installation/#with-roarn-recommended-for-rojo-users","text":"To install fetchu with Roarn you can simply do the following command: roarn install fetchu Learn more on how Roarn, a Roblox package manager helps your workspace.","title":"with Roarn (recommended for Rojo users)"},{"location":"installation/#with-roblox","text":"If you are preferably using Roblox Studio to develop code you can also install our module through the Roblox marketplace. Roblox Module","title":"with Roblox"},{"location":"installation/#with-github","text":"You can also install our package from GitHub releases easily. We have ZIP files available for Rojo users although we would prefer you using Roarn for a more organized workspace.","title":"with GitHub"}]}